- hosts: all
  roles:
    - common
- hosts: all:!packer
  vars:
    subdomain: "{{lookup('env', 'SUBDOMAIN')}}"
    domain: "{{lookup('env', 'DOMAIN')}}"
    full_domain: "{{(subdomain == '') | ternary(domain, '%s.%s' % (subdomain, domain))}}"
    env_file_path: "{{lookup('env', 'ENV_FILE_PATH')}}"
    config:
      "DATABASE_URL={{lookup('env', 'DATABASE_URL')}}
      SES_DOMAIN_IDENTITY_ARN={{lookup('env', 'SES_DOMAIN_IDENTITY_ARN')}}
      SMTP_SERVER={{lookup('env', 'SMTP_SERVER')}}
      SMTP_USERNAME={{lookup('env', 'SMTP_USERNAME')}}
      SMTP_PASSWORD={{lookup('env', 'SMTP_PASSWORD')}}
      {{lookup('file', env_file_path)}}"
    config_hash: "{{config | regex_replace('\\n', '') | regex_replace('\\s\\s+', ' ') | hash('sha1')}}"
    config_hash_path: "{{ansible_env.HOME}}/config-hash"
  tasks:
    - command: dokku domains:report default --domains-app-vhosts
      name: list dokku domains
      register: dokku_domains_report_result
      changed_when: false
      failed_when: dokku_domains_report_result.rc != 0 and (dokku_domains_report_result.rc != 1 or dokku_domains_report_result.stderr != "not deployed")
    - command: dokku domains:add default {{full_domain}}
      name: add dokku domain
      register: dokku_domains_add_result
      when: full_domain not in dokku_domains_report_result.stdout.split(' ')
      changed_when: dokku_domains_add_result is succeeded
    - command: cat {{config_hash_path}}
      name: fetch config hash
      register: cat_config_hash_result
      changed_when: false
      failed_when: cat_config_hash_result.rc != 0 and cat_config_hash_result.rc != 1
    - include_role:
        name: dokku/config
      vars:
        value: "{{config}}"
      when: (cat_config_hash_result.stdout | regex_replace('\n', '')) != config_hash
    - copy:
        content: "{{config_hash}}"
        dest: "{{config_hash_path}}"
